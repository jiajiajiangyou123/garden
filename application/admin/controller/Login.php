<?php
/**
 * Created by PhpStorm.
 * User: wangjia
 * Date: 2018/6/28
 * Time: 11:00
 */

namespace app\admin\controller;

use app\admin\model\Admin as Admins;
use app\admin\model\LoginLog;
use app\admin\model\Token;
use think\captcha\Captcha;
use think\Controller;

class Login extends Controller
{
    private $_model;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $admin_id = session('admin_id');
        if ($admin_id) {
            $this->redirect('/admin');
        }
        return $this->fetch();
    }

    public function checkLogin()
    {
        $this->_model = new Admins();
        $username = input('post.username');
        $password = input('post.password');
        $captcha = input('post.captcha');
        if (!$username || !$password) {
            return json_data('账号或密码错误');
        }
        $captchas = new Captcha();
        if (!$captchas->check($captcha)) {
            return json_data('验证码错误');
        }
        $this->_model->_where['username'] = $username;
        $admin = $this->_model->where($this->_model->_where)->find();
        if (empty($admin)) {
            return json_data('用户不存在');
        }
        if ($admin['password'] != md12345($password)) {
            return json_data('密码错误');
        }
        $token = md12345(time().$username);

        $tokenM = new Token();
        $tokenM->_where['aid'] = $admin['id'];
        $tokens = $tokenM->where($tokenM->_where)->find();
        if (empty($tokens)) {
            $tokenData = array(
                'token'     =>  $token,
                'aid'       =>  $admin['id'],
                'login_time'    =>  time() + 1800,
                'create_time'   =>  time(),
                'update_time'   =>  time()
            );
            $token_res = $tokenM->insert($tokenData);
        } else {
            $tokenData = array(
                'token'     =>  $token,
                'aid'       =>  $admin['id'],
                'login_time'    =>  time() + 1800,
                'update_time'   =>  time()
            );
            $token_res = $tokenM->where($tokenM->_where)->update($tokenData);
        }

        $loginLogM = new LoginLog();
        $logData = array();
        $logData['ip'] = request()->ip();
        $logData['time'] = time();
        $logData['date'] = date('Y-m-d H:i:s');
        $logData['aid'] = $admin['id'];
        $log_res = $loginLogM->insert($logData);

        if ($token_res !== false && $log_res) {
            session('admin_id',$admin['id']);
            session('token',$token);
            cookie('card',$admin['card']);
            cookie('name',$admin['name']);
            return json_data('登录成功','/admin',1);
        }
        return json_data('网络错误');
    }

    public function loginOut()
    {
        session('admin_id',null);
        session('token',null);
        cookie('card',null);
        cookie('name',null);

        $this->redirect('/admin/login');
    }
}