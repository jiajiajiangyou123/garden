<?php
/**
 * Created by PhpStorm.
 * User: wangjia
 * Date: 2018/6/26
 * Time: 10:28
 */

namespace app\admin\controller;

use think\Controller;
use app\admin\model\Token;
use app\admin\controller\Login as Login;

class Admin extends Controller
{
    private $_model;
    public $_admin_id;
    public $_login_status;
    public static $_sort;
    public $_controller;
    public $_action;

    public function _initialize()
    {
        $this->_controller = request()->controller();
        $this->_action = request()->action();
        $this->assign('controller',$this->_controller);
        $this->_admin_id = session('admin_id');
        $this->loginStatus();
        $this->submit();
        $menuList = $this->treeMenu();
        $this->assign('menuList',$menuList);
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @Title   loginStatus
     * @Description     todo::检查当前用户登录情况
     * */
    public function loginStatus()
    {
        if (!$this->_admin_id) {
            $login = new Login();
            $login->loginOut();
        }

        $this->_model = new Token();

        $sessionToken = session('token');
        $this->_model->where = [
            'aid'   =>  $this->_admin_id
        ];
        $data = $this->_model->where($this->_model->where)->find();
        if ($data['token'] != $sessionToken) {
            //异地登录
            $this->_login_status = 2;
            return;
        }

        $tokenData = ['login_time'    =>  $data['login_time'] + 1800];

        $this->_model->where($this->_model->where)->update($tokenData);
        $this->_login_status = 1;
        return true;
    }

    /**
     * @Title   submit
     * @Description todo::提交表单需要在用户登录状态正常的情况下
     * @Time    2018年6月26日17:49:28
     * */
    public function submit()
    {
        if (request()->isPost() && $this->_login_status !== 1) {
            $msg = $this->_login_status == 2 ? '登录超时' : '异地登录';
            return json_data($msg,'',$this->_login_status);
        }
        if ($this->_login_status !== 1) {
            $this->assign('login_status',$this->_login_status);
            return false;
        }
        return true;
    }

    public function treeMenu()
    {
        $map = array(
//            'status'    =>  1
        );
        $data = db('menu')->where($map)->select();
        if ($data) {
            $data = collection($data)->toArray();
        }

        $data = self::makeTree($data);
//my_dump_say($data);
        return $data;
    }

    public function makeTree($data,$pid=0)
    {
        $sort = array();
        foreach ($data as $key => $val) {
            $list = isset($sort[$val['pid']]) ? $sort[$val['pid']] : [];
            array_push($list,$val);
            $sort[$val['pid']] = $list;
        }
        return $sort;
    }

}